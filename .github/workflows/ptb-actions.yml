name: PTB Tests CI

on:
  push:
    branch: [move_to_pytest]

jobs:
  allure:
    name: Generate Allure Report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure Report action from marketplace
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: /home/runner/work/ptbtest/ptbtest/allure-results
          gh_pages: gh-pages
          allure_report: /home/runner/work/ptbtest/ptbtest/allure-results/allure-report
          allure_history: /home/runner/work/ptbtest/ptbtest/allure-results/allure-history
          keep_reports: 20

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history

      - name: Post the link to the report
        if: always()
        uses: Sibz/github-status-action@v1
        with:
            authToken: ${{secrets.GITHUB_TOKEN}}
            context: 'Test report'
            state: 'success'
            sha: ${{ github.event.pull_request.head.sha }}
            target_url: vaknir.github.io/ptbtest/github-allure-history/${{ github.run_number }}

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest -k "inlinequery or chat" -v --alluredir="/home/runner/work/ptbtest/ptbtest/allure-results"  --junitxml="/home/runner/work/ptbtest/ptbtest/allure-results/unit.xml"